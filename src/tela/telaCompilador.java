/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tela;

import compiller.AnalisadorLexico;
import compiller.Token;
import java.awt.Color;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Document;
import javax.swing.text.Highlighter;

/**
 *
 * @author User
 */
public class telaCompilador extends javax.swing.JFrame {

    /**
     * Creates new form telaCompilador
     */
    public telaCompilador() {
        initComponents();
        setLocationRelativeTo(null);
    }
    
    public void preencherTabela (ArrayList<Token> dado){
        //criando a tabela
        DefaultTableModel tabela = (DefaultTableModel)jtSaida.getModel();
        tabela.setRowCount(0);
        //crindo arrayList para receber os dados passados por parametro
        ArrayList<Token> dados = dado;
        
        //variaveis
        int ponteiro1=0;
        String palavra="";
        String erro="";
        
        //preenchendo a tabela com os simbolos e seus estados (existe(simbolo) ou nao existe(error))
        for(int i=0; i<dados.size(); i++){
            Object t[] = {dados.get(i).getToken(), dados.get(i).getEstado()};
            tabela.addRow(t);
            if(dados.get(i).getEstado().equals("erro")){
                pintarPalavra(dados.get(i).getToken());
            }
            
        }
    }
        
       public static void pintarPalavra(String palavra) {
        try {
            Highlighter highlighter = jtaCodigoFonte.getHighlighter();
            highlighter.removeAllHighlights(); // Remove todos os destaques existentes

            String texto = jtaCodigoFonte.getText();
            int inicioPalavra = texto.indexOf(palavra); // Encontra a posição da palavra

            while (inicioPalavra >= 0) {
                int numeroLinha = jtaCodigoFonte.getLineOfOffset(inicioPalavra); // Obtém o número da linha em que a palavra está
                int inicioLinha = jtaCodigoFonte.getLineStartOffset(numeroLinha); // Obtém o início da linha
                int fimLinha = jtaCodigoFonte.getLineEndOffset(numeroLinha); // Obtém o fim da linha

                // Pinta toda a linha de vermelho
                highlighter.addHighlight(inicioLinha, fimLinha,
                        new DefaultHighlighter.DefaultHighlightPainter(Color.RED));

                inicioPalavra = texto.indexOf(palavra, fimLinha); // Procura pela próxima ocorrência da palavra
            }

            // Desativa a funcionalidade de pintura enquanto digitamos
            Document document = jtaCodigoFonte.getDocument();
            document.addDocumentListener(new DocumentListener() {
                @Override
                public void insertUpdate(DocumentEvent e) {
                    removerPintura();
                }

                @Override
                public void removeUpdate(DocumentEvent e) {
                    removerPintura();
                }

                @Override
                public void changedUpdate(DocumentEvent e) {
                    removerPintura();
                }

                private void removerPintura() {
                    highlighter.removeAllHighlights();
                }
            });
        } catch (BadLocationException e) {
            e.printStackTrace();
        }
    }    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtSaida = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtaCodigoFonte = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        try {
            compilar =(javax.swing.JMenuItem)java.beans.Beans.instantiate(getClass().getClassLoader(), "tela.telaCompilador_compilar");
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (java.io.IOException e) {
            e.printStackTrace();
        }
        jMenu5 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(10, 10));

        jtSaida.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jtSaida.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "LEXEMA", "TIPO"
            }
        ));
        jtSaida.setRowHeight(22);
        jScrollPane1.setViewportView(jtSaida);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "SAIDA DO LEXICO"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jtaCodigoFonte.setColumns(1);
        jtaCodigoFonte.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jtaCodigoFonte.setLineWrap(true);
        jtaCodigoFonte.setRows(5);
        jtaCodigoFonte.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jtaCodigoFonte.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jtaCodigoFonte.setMaximumSize(new java.awt.Dimension(2000, 29));
        jtaCodigoFonte.setMinimumSize(new java.awt.Dimension(20, 29));
        jScrollPane3.setViewportView(jtaCodigoFonte);

        jMenu1.setText("File");

        jMenuItem1.setText("Open file");
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem2.setText("Copy");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem3.setText("Paste");
        jMenu2.add(jMenuItem3);

        jMenuItem4.setText("Delete");
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        jMenu4.setText("COMPILAR");
        jMenu4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu4ActionPerformed(evt);
            }
        });

        compilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compilarActionPerformed(evt);
            }
        });
        jMenu4.add(compilar);

        jMenuBar1.add(jMenu4);

        jMenu5.setText("OPCOES");

        jMenuItem5.setText("Opcoes");
        jMenu5.add(jMenuItem5);

        jMenuBar1.add(jMenu5);

        jMenu6.setText("AJUDA");

        jMenuItem6.setText("Ajuda");
        jMenu6.add(jMenuItem6);

        jMenuBar1.add(jMenu6);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1212, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu4ActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jMenu4ActionPerformed

    private void compilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compilarActionPerformed
            // TODO add your handling code here:
        //metodo para remover quebras de linha
        String codigoFonte="";
        for(int i=0; i<jtaCodigoFonte.getText().length(); i++){
            if (jtaCodigoFonte.getText().charAt(i) == '\n') {
               codigoFonte+=" ";
            }else {
               codigoFonte+=jtaCodigoFonte.getText().charAt(i); 
            }
        }
        
       AnalisadorLexico al = new AnalisadorLexico();
       preencherTabela(al.verificarCaractere(codigoFonte));
    }//GEN-LAST:event_compilarActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(telaCompilador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(telaCompilador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(telaCompilador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(telaCompilador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new telaCompilador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem compilar;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jtSaida;
    public static javax.swing.JTextArea jtaCodigoFonte;
    // End of variables declaration//GEN-END:variables
}
